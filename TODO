TODO:
  ☐ 記事一覧の「もっと見る」ボタン
  ☐ SNSボタンコンポーネント
  ☐ メニューフロートボタン
  ☐ PWAの実装確認
  ☐ client-onlyの「fetch as google」「googleオプティマイズ」との兼ね合い調査
  ☐ asyncDataで描画した時とcreatedでタイミングを送らせて描画した時とのlighthouseのスコアの違い（後追いの描画nuxtだと実装楽。SEOに影響しないコンテンツなら積極的に利用してもいいかも。文章量が多い時に関連コンテンツのみを読み込ませる意味でSEO的に良い？もしくは描画コンテンツがサーバーとクライアントで違うということでNG？結局はGoogleがJSのレンダリングも認識してくれるようになれば考える必要ない？）

一旦保留:
  ☐ envファイル、テスト環境と出し分け
  ☐ gzip→「nuxt-compress」が「generate」の際に有効にならない

最後に対応:
  ☐ mixinsにまとめるスクリプトあるか検討
  ☐ 最後にVScodeまわりの修正あれば「00」のほうにコピーしておく

Archive:
  ✔ bootstrapカスタマイズ @done(20-11-08 16:10) @project(TODO)
  ✔ SCSSのコンパイルをscopedで行えるようにする @done(20-11-08 16:08) @project(TODO)
  ✔ 一覧ページのフィルター @done(20-11-08 05:03) @project(TODO)
  ✔ sitemapタイムゾーンを反映できない→（https://nju33.com/javascript/日本時間を取得）→「GMT」で時間をパースしたら解決 @done(20-11-06 00:43) @project(一旦保留)
  ✔ firebase hosting側で利用すればCDNみたいになるかもしれない（画像がWPに登録してあるのを読みに行くため）→できた！！ @done(20-11-05 23:37) @project(TODO)
  ✔ GAの設定 @done(20-11-05 23:17) @project(TODO)
  ✘ vscodeのもろもろの設定方法まとめる→別のリポジトリで対応する @cancelled(20-11-05 23:00) @project(TODO)
  ✘ lazyimg,Lazysizes（スクロールに連動した画像の遅延読み込み？imgタグのlazy属性とはまた異なる？） @cancelled(20-11-05 22:59) @project(TODO)
  ✔ production時にconsoleを削除する（https://blog.35d.jp/2020-01-28-babel-console） @done(20-11-05 23:06) @project(TODO)
  ✘ 現在地情報の取得 @cancelled(20-11-05 22:59) @project(TODO)
  ✔ nuxtのpagesで書き出されるページのsitemapの更新日を設定できるようにする @done(20-11-05 22:46) @project(TODO)
  ✔ WPに公開日・更新日の入力欄作成、サイトマップに更新日を反映できるようにする @done(20-11-05 22:28) @project(TODO)
  ✔ ページ遷移時の「asyncData」内で「process.env」が挙動しない→一旦保留→「modules」に「dotenv」を設定していなかった @done(20-11-05 22:23) @project(TODO)
  ✔ WPの画像最適化プラグイン試す（WebP形式試す。そのあとlighthouseのスコアの違い確認 ※SEOに影響出そうか）https://tekito-style.me/columns/wordpress-image-webp @done(20-11-05 07:46) @project(TODO)
  ✔ sitemapの作成 @done(20-11-05 04:37) @project(TODO)
  ✔ WPの子テーマ設定 @done(20-11-03 23:45) @project(TODO)
  ✔ WPのカスタム投稿「cat」設定 @done(20-11-03 23:45) @project(TODO)
  ✔ WPのrest api設定 @done(20-11-03 23:45) @project(TODO)
  ✔ CROS対応がサーバー側で必要だったら対応→問題なし（静的書き出しだからCROS関係ない？） @done(20-11-04 23:51) @project(TODO)
  ✔ flickerで画像の読み込みスクリプト @done(20-10-30 19:38) @project(TODO)
  ✔ WPからの取得データ計画 @done(20-10-27 07:16) @project(TODO)
  ✔ metaデータの設定 @done(20-10-29 02:44) @project(TODO)
  ✔ 構造化データの設定 @done(20-10-28 03:07) @project(TODO)
  ✔ envファイルの設定 @done(20-10-28 03:08) @project(TODO)
  ✔ 静的HTMLのルーティング設定 @done(20-10-29 02:41) @project(TODO)

Memo:
  ■■■ 参考 ■■■
  ・HTML要素にlang属性をつける
  https://syon.github.io/til/2018/10/27/nuxt-html-attrs/
  →でもnuxt.configのほうにつけても上手くいかなかった

  ・WP REST APIのカスタムエンドポイント
  https://knowledge.cpi.ad.jp/cms/wp-rest-api2/

  ・Live Share使い方
  https://qiita.com/irico/items/b67328fdaa2d9a306cba

  ■■■ 反省など ■■■
